concentrations = ['-1', '-3', '-5']
symbols = {'-1': 's', '-2': 's', '-3': 'o', '-5': 'o', '0': 'x', '10': 's', '5': 'o', '1': 'o'}
comparisons = [(u'vlPRCb', u'vlPRCt'), (u'iPN', u'iPNsecond'), (u'iPNtract', u'betweenTract'), (u'betweenTract', u'vlPRCb'), (u'iPN', u'blackhole')]
main_regions = [u'iPN', u'iPNtract', u'vlPRCt']
to_turn = ['120112b_neu', '111012a', '111017a_neu', '111018a', '110902a']

# lesion stuff
conditions = {'intact': 'r', 'iPN': 'g', 'vlPrc': 'b'}
lesion_table_path = '/Users/dedan/projects/fu/results/microcuts.csv'

# data files
valence_file= '/home/jan/Dropbox/results/valence.json'
animal_selection_file = ''
stimuli_order_file = '/home/jan/Dropbox/results/molorder.json'
stimuli_matrix_file = '/home/jan/Dropbox/results/molmatrix.json'
region_order_file = '/home/jan/Dropbox/results/regionorder.json'
results_path = '/home/jan/Dropbox/results/simil80n_bestFalse/nnma/timeseries'
regions_file_path = '/home/jan/Dropbox/results/simil80n_bestFalse/nnma/timeseries/regions.json'

format = 'svg'
heatmap_course = '/home/jan/Dropbox/results/colormaps/redHotLUT_imagesJ.lut'
heatmap_point = '/home/jan/Dropbox/results/colormaps/rainbow_OSN_MZ699 neu.lut'

# temporary solution, can either be False (off), 'mean' (integrate in integrator_window if set)
# or 'max', which takes the maximum instead of averaging
integration_method = 'mean'
integration_window = (6, 10)
region_plot_cutoff =0.6

# what toDo
do_per_animal = True
do_per_region = True
do_overall_region = True
do_region_concentration_valenz = True